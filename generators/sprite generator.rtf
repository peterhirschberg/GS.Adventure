{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww20440\viewh17980\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 let str = '\\n\\n'\
\
const objectGfxKey =\
[\
    3,\
    0x07,                  //      XXX\
    0xFD,                  // XXXXXX X\
    0xA7                   // X X  XXX\
]\
\
const objectGfxDragon = \
[\
    20,\
    0x06,                  //      XX                                                                   \
    0x0F,                  //     XXXX                                                                  \
    0xF3,                  // XXXX  XX                                                                  \
    0xFE,                  // XXXXXXX                                                                   \
    0x0E,                  //     XXX                                                                   \
    0x04,                  //      X                                                                    \
    0x04,                  //      X                                                                    \
    0x1E,                  //    XXXX                                                                   \
    0x3F,                  //   XXXXXX                                                                  \
    0x7F,                  //  XXXXXXX                                                                  \
    0xE3,                  // XXX   XX                                                                  \
    0xC3,                  // XX    XX                                                                  \
    0xC3,                  // XX    XX                                                                  \
    0xC7,                  // XX   XXX                                                                  \
    0xFF,                  // XXXXXXXX                                                                  \
    0x3C,                  //   XXXX                                                                    \
    0x08,                  //     X                                                                     \
    0x8F,                  // X   XXXX                                                                  \
    0xE1,                  // XXX    X                                                                  \
    0x3F,                  //   XXXXXX         \
]\
\
const objectGfxBridge =\
[\
    24,\
    0xC3,                  // XX    XX                                                                  \
    0xC3,                  // XX    XX                                                                  \
    0xC3,                  // XX    XX                                                                  \
    0xC3,                  // XX    XX                                                                  \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0x42,                  //  X    X                                                                   \
    0xC3,                  // XX    XX                                                                  \
    0xC3,                  // XX    XX                                                                  \
    0xC3,                  // XX    XX                                                                  \
    0xC3                   // XX    XX  \
]\
\
\
function renderSprite(sprite, name, color, size) \{\
\
	str += name + ' entry\\n\\n'\
\
	str += '		spriteGetDrawAddress\\n'\
	str += '		_spriteHeader\\n\\n'\
\
\
	let cx = 0\
  let cy = 0\
\
	let height = sprite[0]\
  \
  for (let i=1; i<height+1; i++) \{\
  \
    for (let j=0; j<2; j++) \{\
\
      str += '\\n'\
      str += '		lda >drawAddress\\n'\
      str += '		clc\\n'\
      str += `		adc #$\{cy*160\}\\n`\
      str += '		tcd\\n\\n'      \
\
			str += '		short m\\n'\
\
      str += `		lda #$$\{color\}\\n\\n`\
\
      for (let bit=0; bit < 8; bit++)\
      \{\
        let rowByte = sprite[i]\
        if (rowByte & (1 << (7-bit)))\
        \{\
          let x = cx+(bit*size);\
          for (let k=0; k<size; k++) \{\
	          str += `		sta $\{x+k\}\\n`\
					\}\
        \}\
      \}\
      \
			str += '		long m\\n'\
      \
      cy++\
    \}\
	\}\
\
  str += '\\n'\
\
	str += '		long m\\n'\
  \
  str += '\\n'\
  str += '		_spriteFooter\\n'\
  str += '		rts\\n\\n'\
\
\}\
\
\
function eraseSprite(sprite, name, size) \{\
\
	str += name + ' entry\\n\\n'\
\
  str += '		lda spriteX\\n'\
  str += '		lsr a\\n'\
  str += '		sta spriteX\\n'\
\
	let cx = 0\
  let cy = 0\
\
	let height = sprite[0]\
  \
  for (let i=1; i<height+1; i++) \{\
  \
    for (let j=0; j<2; j++) \{\
\
      str += '		lda spriteY\\n'\
      str += '		clc\\n'\
      str += `		adc #$\{cy\}\\n`\
      str += '		asl a\\n'\
      str += '		tax\\n'\
      str += '		lda screenRowOffsets,x\\n'\
      str += '		sta rowAddress\\n\\n'\
\
      for (let bit=0; bit < 8; bit++)\
      \{\
        let rowByte = sprite[i]\
        if (rowByte & (1 << (7-bit)))\
        \{\
          let x = cx+(bit*size);\
          for (let k=0; k<size; k++) \{\
          \
          	str += '		lda rowAddress\\n'\
            str += '		clc\\n'\
            str += '		adc spriteX\\n\\n'\
            str += '		clc\\n'\
            str += `		adc #$\{x+k\}\\n`\
            \
						str += '		tax\\n\\n'\
\
            str += '\\n'\
//            str += '		short m\\n'\
\
            str += '		lda >BACKGROUND_ADDR,x\\n'\
            str += '		sta >SCREEN_ADDR,x\\n'\
            \
//						str += '		long m\\n'\
            \
            str += '\\n'\
            \
					\}\
        \}\
      \}\
      \
      cy++\
    \}\
	\}\
\
  str += '\\n'\
  \
  str += '		rts\\n\\n'\
\
\}\
\
\
renderSprite(objectGfxKey, 'drawSpriteYellowKey', '33', 1)\
\
renderSprite(objectGfxDragon, 'drawSpriteRedDragon', '55', 1)\
\
renderSprite(objectGfxBridge, 'drawSpriteBridge', '66', 4)\
\
eraseSprite(objectGfxDragon, 'eraseSpriteDragon', 1)\
\
\
str += '\\n\\n'\
\
console.log(str)\
}